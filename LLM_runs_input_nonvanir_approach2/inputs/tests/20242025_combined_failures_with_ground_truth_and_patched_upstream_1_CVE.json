[
    {
        "id": "ASB-A-242996380",
        "vulnerability_url": "https://api.osv.dev/v1/vulns/ASB-A-242996380",
        "severity": "High",
        "upstream_patch_content": "From 8098771bca75166d06f9591d0d2110ed089ee6a7 Mon Sep 17 00:00:00 2001\nFrom: Brian Delwiche <delwiche@google.com>\nDate: Fri, 3 May 2024 21:57:24 +0000\nSubject: [PATCH] Fix permission bypasses to multiple methods\n\nResearcher reports that some BT calls across Binder are validating only\nBT's own permissions and not the calling app's permissions.  On\ninvestigation this seems to be due to a missing null check in several BT\npermissions checks, which allows a malicious app to pass in a null\nAttributionSource and therefore produce a stub AttributionSource chain\nwhich does not properly check for the caller's permissions.\n\nAdd null checks, and correct tests which assumed a null was a valid\ninput.\n\nBug: 242996380\nTest: atest UtilsTest\nTest: researcher POC\nTag: #security\nIgnore-AOSP-First: Security\nChange-Id: I76f49fee440726a7c0714385564ddf0e3e8522b5\n---\n .../app/src/com/android/bluetooth/Utils.java  | 32 +++++++++----------\n .../src/com/android/bluetooth/UtilsTest.java  | 13 +++++---\n .../server/bluetooth/BtPermissionUtils.java   |  4 ++-\n 3 files changed, 28 insertions(+), 21 deletions(-)\n\ndiff --git a/android/app/src/com/android/bluetooth/Utils.java b/android/app/src/com/android/bluetooth/Utils.java\nindex ff57a833cd..70d9004f0b 100644\n--- a/android/app/src/com/android/bluetooth/Utils.java\n+++ b/android/app/src/com/android/bluetooth/Utils.java\n@@ -598,10 +598,10 @@ public final class Utils {\n         }\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n         if (pm == null) {\n             return false;\n@@ -873,10 +873,10 @@ public final class Utils {\n             Log.e(TAG, \"Permission denial: Location is off.\");\n             return false;\n         }\n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n@@ -907,10 +907,10 @@ public final class Utils {\n             return false;\n         }\n \n-        final AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        final AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n@@ -945,10 +945,10 @@ public final class Utils {\n             return false;\n         }\n \n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\ndiff --git a/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java b/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\nindex b4d73bc5c1..2b3d17ee13 100644\n--- a/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\n+++ b/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\n@@ -120,10 +120,12 @@ public class UtilsTest {\n         boolean enabledStatus = locationManager.isLocationEnabledForUser(userHandle);\n \n         locationManager.setLocationEnabledForUser(false, userHandle);\n-        assertThat(Utils.checkCallerHasCoarseLocation(context, null, userHandle)).isFalse();\n+        assertThat(Utils.checkCallerHasCoarseLocation(\n+                       context, context.getAttributionSource(), userHandle))\n+                .isFalse();\n \n         locationManager.setLocationEnabledForUser(true, userHandle);\n-        Utils.checkCallerHasCoarseLocation(context, null, userHandle);\n+        Utils.checkCallerHasCoarseLocation(context, context.getAttributionSource(), userHandle);\n         if (!enabledStatus) {\n             locationManager.setLocationEnabledForUser(false, userHandle);\n         }\n@@ -137,10 +139,13 @@ public class UtilsTest {\n         boolean enabledStatus = locationManager.isLocationEnabledForUser(userHandle);\n \n         locationManager.setLocationEnabledForUser(false, userHandle);\n-        assertThat(Utils.checkCallerHasCoarseOrFineLocation(context, null, userHandle)).isFalse();\n+        assertThat(Utils.checkCallerHasCoarseOrFineLocation(\n+                       context, context.getAttributionSource(), userHandle))\n+                .isFalse();\n \n         locationManager.setLocationEnabledForUser(true, userHandle);\n-        Utils.checkCallerHasCoarseOrFineLocation(context, null, userHandle);\n+        Utils.checkCallerHasCoarseOrFineLocation(\n+                context, context.getAttributionSource(), userHandle);\n         if (!enabledStatus) {\n             locationManager.setLocationEnabledForUser(false, userHandle);\n         }\ndiff --git a/service/src/com/android/server/bluetooth/BtPermissionUtils.java b/service/src/com/android/server/bluetooth/BtPermissionUtils.java\nindex c68f25b65f..b3ba3b013d 100644\n--- a/service/src/com/android/server/bluetooth/BtPermissionUtils.java\n+++ b/service/src/com/android/server/bluetooth/BtPermissionUtils.java\n@@ -86,7 +86,9 @@ class BtPermissionUtils {\n             String message) {\n         final String permission = BLUETOOTH_CONNECT;\n         AttributionSource currentSource =\n-                new AttributionSource.Builder(ctx.getAttributionSource()).setNext(source).build();\n+                new AttributionSource.Builder(ctx.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(source))\n+                        .build();\n         final int result =\n                 permissionManager.checkPermissionForDataDeliveryFromDataSource(\n                         permission, currentSource, message);\n-- \n2.39.5 (Apple Git-154)\n\n",
        "upstream_commits": [
            "8098771bca75166d06f9591d0d2110ed089ee6a7"
        ],
        "upstream_patch_tokens": {
            "openai": 1545,
            "general": {
                "word_based": 642,
                "char_based": 1837
            },
            "gemini": 1917
        },
        "failures": [
            {
                "downstream_version": "14",
                "gemini_token_usage": 1611,
                "branch_used": "android14-release",
                "downstream_patch": "5fe72f931db2898eb51a44e3b1b424c6370e8ad8",
                "repo_path": "android_repos/Bluetooth",
                "result": "failure",
                "downstream_patch_content": "commit 5fe72f931db2898eb51a44e3b1b424c6370e8ad8\nAuthor: Brian Delwiche <delwiche@google.com>\nDate:   Mon May 6 17:38:49 2024 +0000\n\n    Fix permission bypasses to multiple methods\n    \n    Researcher reports that some BT calls across Binder are validating only\n    BT's own permissions and not the calling app's permissions.  On\n    investigation this seems to be due to a missing null check in several BT\n    permissions checks, which allows a malicious app to pass in a null\n    AttributionSource and therefore produce a stub AttributionSource chain\n    which does not properly check for the caller's permissions.\n    \n    Add null checks, and correct tests which assumed a null was a valid\n    input.\n    \n    Bug: 242996380\n    Test: atest UtilsTest\n    Test: researcher POC\n    Tag: #security\n    Ignore-AOSP-First: Security\n    Merged-In: I76f49fee440726a7c0714385564ddf0e3e8522b5\n    Change-Id: I9bf6fac218dccc092debe0904e08eb23cc4583c0\n\ndiff --git a/android/app/src/com/android/bluetooth/Utils.java b/android/app/src/com/android/bluetooth/Utils.java\nindex 2f0fb5f088..fd7a15ab3b 100644\n--- a/android/app/src/com/android/bluetooth/Utils.java\n+++ b/android/app/src/com/android/bluetooth/Utils.java\n@@ -534,10 +534,10 @@ public final class Utils {\n         }\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n         if (pm == null) {\n             return false;\n@@ -809,10 +809,10 @@ public final class Utils {\n             Log.e(TAG, \"Permission denial: Location is off.\");\n             return false;\n         }\n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n@@ -843,10 +843,10 @@ public final class Utils {\n             return false;\n         }\n \n-        final AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        final AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\n@@ -881,10 +881,10 @@ public final class Utils {\n             return false;\n         }\n \n-        AttributionSource currentAttribution = new AttributionSource\n-                .Builder(context.getAttributionSource())\n-                .setNext(attributionSource)\n-                .build();\n+        AttributionSource currentAttribution =\n+                new AttributionSource.Builder(context.getAttributionSource())\n+                        .setNext(Objects.requireNonNull(attributionSource))\n+                        .build();\n         // STOPSHIP(b/188391719): enable this security enforcement\n         // attributionSource.enforceCallingUid();\n         PermissionManager pm = context.getSystemService(PermissionManager.class);\ndiff --git a/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java b/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\nindex 20e830c7ba..0a2fef3649 100644\n--- a/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\n+++ b/android/app/tests/unit/src/com/android/bluetooth/UtilsTest.java\n@@ -119,10 +119,12 @@ public class UtilsTest {\n         boolean enabledStatus = locationManager.isLocationEnabledForUser(userHandle);\n \n         locationManager.setLocationEnabledForUser(false, userHandle);\n-        assertThat(Utils.checkCallerHasCoarseLocation(context, null, userHandle)).isFalse();\n+        assertThat(Utils.checkCallerHasCoarseLocation(\n+                       context, context.getAttributionSource(), userHandle))\n+                .isFalse();\n \n         locationManager.setLocationEnabledForUser(true, userHandle);\n-        Utils.checkCallerHasCoarseLocation(context, null, userHandle);\n+        Utils.checkCallerHasCoarseLocation(context, context.getAttributionSource(), userHandle);\n         if (!enabledStatus) {\n             locationManager.setLocationEnabledForUser(false, userHandle);\n         }\n@@ -136,10 +138,13 @@ public class UtilsTest {\n         boolean enabledStatus = locationManager.isLocationEnabledForUser(userHandle);\n \n         locationManager.setLocationEnabledForUser(false, userHandle);\n-        assertThat(Utils.checkCallerHasCoarseOrFineLocation(context, null, userHandle)).isFalse();\n+        assertThat(Utils.checkCallerHasCoarseOrFineLocation(\n+                       context, context.getAttributionSource(), userHandle))\n+                .isFalse();\n \n         locationManager.setLocationEnabledForUser(true, userHandle);\n-        Utils.checkCallerHasCoarseOrFineLocation(context, null, userHandle);\n+        Utils.checkCallerHasCoarseOrFineLocation(\n+                context, context.getAttributionSource(), userHandle);\n         if (!enabledStatus) {\n             locationManager.setLocationEnabledForUser(false, userHandle);\n         }\n",
                "downstream_patch_tokens": {
                    "openai": 1302,
                    "general": {
                        "word_based": 521,
                        "char_based": 1557
                    },
                    "gemini": 1611
                },
                "file_conflicts": [
                    {
                        "file_name": "service/src/com/android/server/bluetooth/BtPermissionUtils.java",
                        "total_hunks": 0,
                        "failed_hunks": [],
                        "inline_merge_conflicts": [],
                        "rej_file_content": "",
                        "patch_apply_output": "patching file android/app/src/com/android/bluetooth/Utils.java\nHunk #1 succeeded at 534 (offset -64 lines).\nHunk #2 succeeded at 809 (offset -64 lines).\nHunk #3 succeeded at 843 (offset -64 lines).\nHunk #4 succeeded at 881 (offset -64 lines).\ncan't find file to patch at input line 69\nPerhaps you used the wrong -p or --strip option?\nThe text leading up to this was:\n--------------------------\n|diff --git a/service/src/com/android/server/bluetooth/BtPermissionUtils.java b/service/src/com/android/server/bluetooth/BtPermissionUtils.java\n|index c68f25b65f..b3ba3b013d 100644\n|--- a/service/src/com/android/server/bluetooth/BtPermissionUtils.java\n|+++ b/service/src/com/android/server/bluetooth/BtPermissionUtils.java\n--------------------------\nFile to patch: \nSkip this patch? [y] \nSkipping patch.\n1 out of 1 hunk ignored",
                        "inline_merge_output": "",
                        "reason": "File 'service/src/com/android/server/bluetooth/BtPermissionUtils.java' is missing in downstream repo",
                        "upstream_file_content": "",
                        "downstream_file_content": "",
                        "inline_merge_token_summary": {
                            "gemini": 0,
                            "openai": 0,
                            "general_word": 0,
                            "general_char": 0
                        },
                        "downstream_file_content_ground_truth": "",
                        "downstream_file_ground_truth_tokens": {},
                        "downstream_file_content_patched_upstream_only": "\u274c File not found after upstream patch"
                    }
                ]
            }
        ]
    }
]