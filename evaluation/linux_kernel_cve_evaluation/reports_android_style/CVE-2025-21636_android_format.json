{
  "cve_id": "CVE-2025-21636",
  "upstream_commit": "c10377bbc1972d858eaf0ab366a311b39f8ef1b6",
  "upstream_patch_content": "From 6259d2484d0ceff42245d1f09cc8cb6ee72d847a Mon Sep 17 00:00:00 2001\nFrom: \"Matthieu Baerts (NGI0)\" <matttbe@kernel.org>\nDate: Wed, 8 Jan 2025 16:34:36 +0100\nSubject: [PATCH] sctp: sysctl: plpmtud_probe_interval: avoid using\n current->nsproxy\n\nAs mentioned in a previous commit of this series, using the 'net'\nstructure via 'current' is not recommended for different reasons:\n\n- Inconsistency: getting info from the reader's/writer's netns vs only\n  from the opener's netns.\n\n- current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n  (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n  syzbot [1] using acct(2).\n\nThe 'net' structure can be obtained from the table->data using\ncontainer_of().\n\nNote that table->data could also be used directly, as this is the only\nmember needed from the 'net' structure, but that would increase the size\nof this fix, to use '*data' everywhere 'net->sctp.probe_interval' is\nused.\n\nFixes: d1e462a7a5f3 (\"sctp: add probe_interval in sysctl and sock/asoc/transport\")\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nLink: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-8-5df34b2083e8@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>\n---\n net/sctp/sysctl.c | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 18fa4f44e8ec..8e1e97be4df7 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -569,7 +569,8 @@ static int proc_sctp_do_udp_port(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_probe_interval(const struct ctl_table *ctl, int write,\n \t\t\t\t       void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net,\n+\t\t\t\t       sctp.probe_interval);\n \tstruct ctl_table tbl;\n \tint ret, new_value;\n \n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "e919197fb8616331f5dc81e4c3cc3d12769cb725",
      "downstream_patch": "44ee8635922b6eb940faddb961a8347c6857d722",
      "commit_date": "2025-01-17 13:34:42 +0100",
      "result": "success",
      "downstream_patch_content": "commit 44ee8635922b6eb940faddb961a8347c6857d722\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:36 2025 +0100\n\n    sctp: sysctl: plpmtud_probe_interval: avoid using current->nsproxy\n    \n    commit 6259d2484d0ceff42245d1f09cc8cb6ee72d847a upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.probe_interval' is\n    used.\n    \n    Fixes: d1e462a7a5f3 (\"sctp: add probe_interval in sysctl and sock/asoc/transport\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-8-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex ebe81539d30a..916dc2e81e42 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -562,7 +562,8 @@ static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n static int proc_sctp_do_probe_interval(struct ctl_table *ctl, int write,\n \t\t\t\t       void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net,\n+\t\t\t\t       sctp.probe_interval);\n \tstruct ctl_table tbl;\n \tint ret, new_value;\n \n"
    },
    {
      "downstream_version": "55627918febdf9d71107a1e68d1528dc591c9a15",
      "downstream_patch": "284a221f8fa503628432c7bb5108277c688c6ffa",
      "commit_date": "2025-01-17 13:36:18 +0100",
      "result": "success",
      "downstream_patch_content": "commit 284a221f8fa503628432c7bb5108277c688c6ffa\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:36 2025 +0100\n\n    sctp: sysctl: plpmtud_probe_interval: avoid using current->nsproxy\n    \n    commit 6259d2484d0ceff42245d1f09cc8cb6ee72d847a upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.probe_interval' is\n    used.\n    \n    Fixes: d1e462a7a5f3 (\"sctp: add probe_interval in sysctl and sock/asoc/transport\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-8-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 04494f61fb48..fd73be940f46 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -573,7 +573,8 @@ static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n static int proc_sctp_do_probe_interval(struct ctl_table *ctl, int write,\n \t\t\t\t       void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net,\n+\t\t\t\t       sctp.probe_interval);\n \tstruct ctl_table tbl;\n \tint ret, new_value;\n \n"
    },
    {
      "downstream_version": "5b77d73f3be5102720fb685b9e6900e3500e1096",
      "downstream_patch": "bcf8c60074e81ed2ac2d35130917175a3949c917",
      "commit_date": "2025-01-17 13:40:47 +0100",
      "result": "success",
      "downstream_patch_content": "commit bcf8c60074e81ed2ac2d35130917175a3949c917\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:36 2025 +0100\n\n    sctp: sysctl: plpmtud_probe_interval: avoid using current->nsproxy\n    \n    commit 6259d2484d0ceff42245d1f09cc8cb6ee72d847a upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.probe_interval' is\n    used.\n    \n    Fixes: d1e462a7a5f3 (\"sctp: add probe_interval in sysctl and sock/asoc/transport\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-8-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 18fa4f44e8ec..8e1e97be4df7 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -569,7 +569,8 @@ static int proc_sctp_do_udp_port(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_probe_interval(const struct ctl_table *ctl, int write,\n \t\t\t\t       void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net,\n+\t\t\t\t       sctp.probe_interval);\n \tstruct ctl_table tbl;\n \tint ret, new_value;\n \n"
    },
    {
      "downstream_version": "0a0966312ac3eedd7f5f2a766ed4702df39a9a65",
      "downstream_patch": "1dc5da6c4178f3e4b95c631418f72de9f86c0449",
      "commit_date": "2025-01-23 17:15:51 +0100",
      "result": "success",
      "downstream_patch_content": "commit 1dc5da6c4178f3e4b95c631418f72de9f86c0449\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:36 2025 +0100\n\n    sctp: sysctl: plpmtud_probe_interval: avoid using current->nsproxy\n    \n    commit 6259d2484d0ceff42245d1f09cc8cb6ee72d847a upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.probe_interval' is\n    used.\n    \n    Fixes: d1e462a7a5f3 (\"sctp: add probe_interval in sysctl and sock/asoc/transport\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-8-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex ebe81539d30a..916dc2e81e42 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -562,7 +562,8 @@ static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n static int proc_sctp_do_probe_interval(struct ctl_table *ctl, int write,\n \t\t\t\t       void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net,\n+\t\t\t\t       sctp.probe_interval);\n \tstruct ctl_table tbl;\n \tint ret, new_value;\n \n"
    }
  ],
  "failures": []
}