{
  "cve_id": "CVE-2025-21637",
  "upstream_commit": "15649fd5415eda664ef35780c2013adeb5d9c695",
  "upstream_patch_content": "From c10377bbc1972d858eaf0ab366a311b39f8ef1b6 Mon Sep 17 00:00:00 2001\nFrom: \"Matthieu Baerts (NGI0)\" <matttbe@kernel.org>\nDate: Wed, 8 Jan 2025 16:34:35 +0100\nSubject: [PATCH] sctp: sysctl: udp_port: avoid using current->nsproxy\n\nAs mentioned in a previous commit of this series, using the 'net'\nstructure via 'current' is not recommended for different reasons:\n\n- Inconsistency: getting info from the reader's/writer's netns vs only\n  from the opener's netns.\n\n- current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n  (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n  syzbot [1] using acct(2).\n\nThe 'net' structure can be obtained from the table->data using\ncontainer_of().\n\nNote that table->data could also be used directly, but that would\nincrease the size of this fix, while 'sctp.ctl_sock' still needs to be\nretrieved from 'net' structure.\n\nFixes: 046c052b475e (\"sctp: enable udp tunneling socks\")\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nLink: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-7-5df34b2083e8@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>\n---\n net/sctp/sysctl.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 9d29611621fe..18fa4f44e8ec 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -528,7 +528,7 @@ static int proc_sctp_do_auth(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_udp_port(const struct ctl_table *ctl, int write,\n \t\t\t\t void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.udp_port);\n \tunsigned int min = *(unsigned int *)ctl->extra1;\n \tunsigned int max = *(unsigned int *)ctl->extra2;\n \tstruct ctl_table tbl;\n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "1b67030d39f2b00f94ac1f0af11ba6657589e4d3",
      "downstream_patch": "e919197fb8616331f5dc81e4c3cc3d12769cb725",
      "commit_date": "2025-01-17 13:34:42 +0100",
      "result": "success",
      "downstream_patch_content": "commit e919197fb8616331f5dc81e4c3cc3d12769cb725\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:35 2025 +0100\n\n    sctp: sysctl: udp_port: avoid using current->nsproxy\n    \n    commit c10377bbc1972d858eaf0ab366a311b39f8ef1b6 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: 046c052b475e (\"sctp: enable udp tunneling socks\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-7-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 6dae62136155..ebe81539d30a 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -521,7 +521,7 @@ static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n \t\t\t\t void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.udp_port);\n \tunsigned int min = *(unsigned int *)ctl->extra1;\n \tunsigned int max = *(unsigned int *)ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "7ec30c54f339c640aa7e49d7e9f7bbed6bd42bf6",
      "downstream_patch": "55627918febdf9d71107a1e68d1528dc591c9a15",
      "commit_date": "2025-01-17 13:36:18 +0100",
      "result": "success",
      "downstream_patch_content": "commit 55627918febdf9d71107a1e68d1528dc591c9a15\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:35 2025 +0100\n\n    sctp: sysctl: udp_port: avoid using current->nsproxy\n    \n    commit c10377bbc1972d858eaf0ab366a311b39f8ef1b6 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: 046c052b475e (\"sctp: enable udp tunneling socks\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-7-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 3ed15ea96ec3..04494f61fb48 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -532,7 +532,7 @@ static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n \t\t\t\t void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.udp_port);\n \tunsigned int min = *(unsigned int *)ctl->extra1;\n \tunsigned int max = *(unsigned int *)ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "c184bc621e3cef03ac9ba81a50dda2dae6a21d36",
      "downstream_patch": "5b77d73f3be5102720fb685b9e6900e3500e1096",
      "commit_date": "2025-01-17 13:40:47 +0100",
      "result": "success",
      "downstream_patch_content": "commit 5b77d73f3be5102720fb685b9e6900e3500e1096\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:35 2025 +0100\n\n    sctp: sysctl: udp_port: avoid using current->nsproxy\n    \n    commit c10377bbc1972d858eaf0ab366a311b39f8ef1b6 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: 046c052b475e (\"sctp: enable udp tunneling socks\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-7-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 9d29611621fe..18fa4f44e8ec 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -528,7 +528,7 @@ static int proc_sctp_do_auth(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_udp_port(const struct ctl_table *ctl, int write,\n \t\t\t\t void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.udp_port);\n \tunsigned int min = *(unsigned int *)ctl->extra1;\n \tunsigned int max = *(unsigned int *)ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "bd2a2939423566c654545fa3e96a656662a0af9e",
      "downstream_patch": "0a0966312ac3eedd7f5f2a766ed4702df39a9a65",
      "commit_date": "2025-01-23 17:15:51 +0100",
      "result": "success",
      "downstream_patch_content": "commit 0a0966312ac3eedd7f5f2a766ed4702df39a9a65\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:35 2025 +0100\n\n    sctp: sysctl: udp_port: avoid using current->nsproxy\n    \n    commit c10377bbc1972d858eaf0ab366a311b39f8ef1b6 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: 046c052b475e (\"sctp: enable udp tunneling socks\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-7-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 6dae62136155..ebe81539d30a 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -521,7 +521,7 @@ static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n static int proc_sctp_do_udp_port(struct ctl_table *ctl, int write,\n \t\t\t\t void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.udp_port);\n \tunsigned int min = *(unsigned int *)ctl->extra1;\n \tunsigned int max = *(unsigned int *)ctl->extra2;\n \tstruct ctl_table tbl;\n"
    }
  ],
  "failures": []
}