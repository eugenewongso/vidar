{
  "cve_id": "CVE-2025-21638",
  "upstream_commit": "9fc17b76fc70763780aa78b38fcf4742384044a5",
  "upstream_patch_content": "From 15649fd5415eda664ef35780c2013adeb5d9c695 Mon Sep 17 00:00:00 2001\nFrom: \"Matthieu Baerts (NGI0)\" <matttbe@kernel.org>\nDate: Wed, 8 Jan 2025 16:34:34 +0100\nSubject: [PATCH] sctp: sysctl: auth_enable: avoid using current->nsproxy\n\nAs mentioned in a previous commit of this series, using the 'net'\nstructure via 'current' is not recommended for different reasons:\n\n- Inconsistency: getting info from the reader's/writer's netns vs only\n  from the opener's netns.\n\n- current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n  (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n  syzbot [1] using acct(2).\n\nThe 'net' structure can be obtained from the table->data using\ncontainer_of().\n\nNote that table->data could also be used directly, but that would\nincrease the size of this fix, while 'sctp.ctl_sock' still needs to be\nretrieved from 'net' structure.\n\nFixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nLink: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>\n---\n net/sctp/sysctl.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex a5285815264d..9d29611621fe 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -499,7 +499,7 @@ static int proc_sctp_do_alpha_beta(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(const struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "4059507e34aa5fe0fa9fd5b2b5f0c8b26ab2d482",
      "downstream_patch": "1b67030d39f2b00f94ac1f0af11ba6657589e4d3",
      "commit_date": "2025-01-17 13:34:41 +0100",
      "result": "success",
      "downstream_patch_content": "commit 1b67030d39f2b00f94ac1f0af11ba6657589e4d3\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:34 2025 +0100\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 0dd5da971689..6dae62136155 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -492,7 +492,7 @@ static int proc_sctp_do_alpha_beta(struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    },
    {
      "downstream_version": "dc9d0e3cfd16f66fbf0862857c6b391c8613ca9f",
      "downstream_patch": "7ec30c54f339c640aa7e49d7e9f7bbed6bd42bf6",
      "commit_date": "2025-01-17 13:36:18 +0100",
      "result": "success",
      "downstream_patch_content": "commit 7ec30c54f339c640aa7e49d7e9f7bbed6bd42bf6\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:34 2025 +0100\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 2df0b5fa22f8..3ed15ea96ec3 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -503,7 +503,7 @@ static int proc_sctp_do_alpha_beta(struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    },
    {
      "downstream_version": "c87f1f6ade56c711f8736901e330685b453e420e",
      "downstream_patch": "c184bc621e3cef03ac9ba81a50dda2dae6a21d36",
      "commit_date": "2025-01-17 13:40:47 +0100",
      "result": "success",
      "downstream_patch_content": "commit c184bc621e3cef03ac9ba81a50dda2dae6a21d36\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:34 2025 +0100\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex a5285815264d..9d29611621fe 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -499,7 +499,7 @@ static int proc_sctp_do_alpha_beta(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(const struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    },
    {
      "downstream_version": "0f78f09466744589e420935e646ae78212a38290",
      "downstream_patch": "bd2a2939423566c654545fa3e96a656662a0af9e",
      "commit_date": "2025-01-23 17:15:51 +0100",
      "result": "success",
      "downstream_patch_content": "commit bd2a2939423566c654545fa3e96a656662a0af9e\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:34 2025 +0100\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 0dd5da971689..6dae62136155 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -492,7 +492,7 @@ static int proc_sctp_do_alpha_beta(struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    },
    {
      "downstream_version": "03ca51faba2b017bf6c90e139434c4117d0afcdc",
      "downstream_patch": "dc583e7e5f8515ca489c0df28e4362a70eade382",
      "commit_date": "2025-02-01 18:22:20 +0100",
      "result": "success",
      "downstream_patch_content": "commit dc583e7e5f8515ca489c0df28e4362a70eade382\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:34 2025 +0100\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex a2113f4c5415..8be80096fbb6 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -462,7 +462,7 @@ static int proc_sctp_do_alpha_beta(struct ctl_table *ctl, int write,\n static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n \t\t\t     void *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    },
    {
      "downstream_version": "5599b212d2f4466e1832a94e9932684aaa364587",
      "downstream_patch": "cf387cdebfaebae228dfba162f94c567a67610c3",
      "commit_date": "2025-04-10 14:29:35 +0200",
      "result": "success",
      "downstream_patch_content": "commit cf387cdebfaebae228dfba162f94c567a67610c3\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Tue Mar 11 15:54:27 2025 -0300\n\n    sctp: sysctl: auth_enable: avoid using current->nsproxy\n    \n    commit 15649fd5415eda664ef35780c2013adeb5d9c695 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, but that would\n    increase the size of this fix, while 'sctp.ctl_sock' still needs to be\n    retrieved from 'net' structure.\n    \n    Fixes: b14878ccb7fa (\"net: sctp: cache auth_enable per endpoint\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-6-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Magali Lemes <magali.lemes@canonical.com>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 4116b3cd83c2..f6fe63f60acd 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -442,7 +442,7 @@ static int proc_sctp_do_auth(struct ctl_table *ctl, int write,\n \t\t\t     void __user *buffer, size_t *lenp,\n \t\t\t     loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n \tstruct ctl_table tbl;\n \tint new_value, ret;\n \n"
    }
  ],
  "failures": []
}