{
  "cve_id": "CVE-2025-21639",
  "upstream_commit": "ea62dd1383913b5999f3d16ae99d411f41b528d4",
  "upstream_patch_content": "From 9fc17b76fc70763780aa78b38fcf4742384044a5 Mon Sep 17 00:00:00 2001\nFrom: \"Matthieu Baerts (NGI0)\" <matttbe@kernel.org>\nDate: Wed, 8 Jan 2025 16:34:33 +0100\nSubject: [PATCH] sctp: sysctl: rto_min/max: avoid using current->nsproxy\n\nAs mentioned in a previous commit of this series, using the 'net'\nstructure via 'current' is not recommended for different reasons:\n\n- Inconsistency: getting info from the reader's/writer's netns vs only\n  from the opener's netns.\n\n- current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n  (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n  syzbot [1] using acct(2).\n\nThe 'net' structure can be obtained from the table->data using\ncontainer_of().\n\nNote that table->data could also be used directly, as this is the only\nmember needed from the 'net' structure, but that would increase the size\nof this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n\nFixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nLink: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>\n---\n net/sctp/sysctl.c | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 9848d19630a4..a5285815264d 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -433,7 +433,7 @@ static int proc_sctp_do_hmac_alg(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -461,7 +461,7 @@ static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "3cd0659deb9c03535fd61839e91d4d4d3e51ac71",
      "downstream_patch": "4059507e34aa5fe0fa9fd5b2b5f0c8b26ab2d482",
      "commit_date": "2025-01-17 13:34:41 +0100",
      "result": "success",
      "downstream_patch_content": "commit 4059507e34aa5fe0fa9fd5b2b5f0c8b26ab2d482\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    commit 9fc17b76fc70763780aa78b38fcf4742384044a5 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 01fe23faf20d..0dd5da971689 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -426,7 +426,7 @@ static int proc_sctp_do_hmac_alg(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -454,7 +454,7 @@ static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "ad673e514b2793b8d5902f6ba6ab7e890dea23d5",
      "downstream_patch": "dc9d0e3cfd16f66fbf0862857c6b391c8613ca9f",
      "commit_date": "2025-01-17 13:36:17 +0100",
      "result": "success",
      "downstream_patch_content": "commit dc9d0e3cfd16f66fbf0862857c6b391c8613ca9f\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    commit 9fc17b76fc70763780aa78b38fcf4742384044a5 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 680ee80055f7..2df0b5fa22f8 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -437,7 +437,7 @@ static int proc_sctp_do_hmac_alg(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -465,7 +465,7 @@ static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "f0bb3935470684306e4e04793a20ac4c4b08de0b",
      "downstream_patch": "c87f1f6ade56c711f8736901e330685b453e420e",
      "commit_date": "2025-01-17 13:40:47 +0100",
      "result": "success",
      "downstream_patch_content": "commit c87f1f6ade56c711f8736901e330685b453e420e\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    commit 9fc17b76fc70763780aa78b38fcf4742384044a5 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 9848d19630a4..a5285815264d 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -433,7 +433,7 @@ static int proc_sctp_do_hmac_alg(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -461,7 +461,7 @@ static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n"
    },
    {
      "downstream_version": "86ddf8118123cb58a0fb8724cad6979c4069065b",
      "downstream_patch": "0f78f09466744589e420935e646ae78212a38290",
      "commit_date": "2025-01-23 17:15:51 +0100",
      "result": "success",
      "downstream_patch_content": "commit 0f78f09466744589e420935e646ae78212a38290\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    commit 9fc17b76fc70763780aa78b38fcf4742384044a5 upstream.\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 01fe23faf20d..0dd5da971689 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -426,7 +426,7 @@ static int proc_sctp_do_hmac_alg(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -454,7 +454,7 @@ static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n"
    }
  ],
  "failures": [
    {
      "downstream_version": "58f9e20e2a7602e1dd649a1ec4790077c251cb6c",
      "downstream_patch": "c8d179f3b1c1d60bf4484f50aa67b4c70f91bff9",
      "commit_date": "2025-02-01 18:18:49 +0100",
      "result": "failure",
      "downstream_patch_content": "commit c8d179f3b1c1d60bf4484f50aa67b4c70f91bff9\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    [ Upstream commit 9fc17b76fc70763780aa78b38fcf4742384044a5 ]\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Sasha Levin <sashal@kernel.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 4513d8d45e55..7777c0096a38 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -372,7 +372,7 @@ static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n \t\t\t\tvoid __user *buffer, size_t *lenp,\n \t\t\t\tloff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -401,7 +401,7 @@ static int proc_sctp_do_rto_max(struct ctl_table *ctl, int write,\n \t\t\t\tvoid __user *buffer, size_t *lenp,\n \t\t\t\tloff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n",
      "error": "patching file net/sctp/sysctl.c\nHunk #1 succeeded at 401 with fuzz 2 (offset -32 lines).\nHunk #2 FAILED at 461.\n1 out of 2 hunks FAILED -- saving rejects to file net/sctp/sysctl.c.rej",
      "total_hunks": 2,
      "total_failed_hunks": 1,
      "failed_hunks": [
        2
      ],
      "file_conflicts": [
        {
          "file_name": "net/sctp/sysctl.c",
          "rej_file_content": "```diff\n--- net/sctp/sysctl.c\n+++ net/sctp/sysctl.c\n@@ -461,7 +461,7 @@ static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n```",
          "inline_merge_conflicts": [
            {
              "hunk_number": 2,
              "merge_conflict": "<<<<<<< DOWNSTREAM (version c8d179f3b1c1d60bf4484f50aa67b4c70f91bff9)\n\n=======\n\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n\tunsigned int min = *(unsigned int *) ctl->extra1;\n\tunsigned int max = *(unsigned int *) ctl->extra2;\n\tstruct ctl_table tbl;\n>>>>>>> UPSTREAM PATCH (commit ea62dd1383913b5999f3d16ae99d411f41b528d4)"
            }
          ],
          "patch_apply_output": "patching file net/sctp/sysctl.c\nHunk #1 succeeded at 401 with fuzz 2 (offset -32 lines).\nHunk #2 FAILED at 461.\n1 out of 2 hunks FAILED -- saving rejects to file net/sctp/sysctl.c.rej"
        }
      ]
    },
    {
      "downstream_version": "acec80d9f126cd3fa764bbe3d96bc0cb5cd2b087",
      "downstream_patch": "246428bfb9e7db15c5cd08e1d0eca41b65af2b06",
      "commit_date": "2025-02-01 18:22:26 +0100",
      "result": "failure",
      "downstream_patch_content": "commit 246428bfb9e7db15c5cd08e1d0eca41b65af2b06\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:33 2025 +0100\n\n    sctp: sysctl: rto_min/max: avoid using current->nsproxy\n    \n    [ Upstream commit 9fc17b76fc70763780aa78b38fcf4742384044a5 ]\n    \n    As mentioned in a previous commit of this series, using the 'net'\n    structure via 'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'net' structure can be obtained from the table->data using\n    container_of().\n    \n    Note that table->data could also be used directly, as this is the only\n    member needed from the 'net' structure, but that would increase the size\n    of this fix, to use '*data' everywhere 'net->sctp.rto_min/max' is used.\n    \n    Fixes: 4f3fdf3bc59c (\"sctp: add check rto_min and rto_max in sysctl\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-5-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Sasha Levin <sashal@kernel.org>\n\ndiff --git a/net/sctp/sysctl.c b/net/sctp/sysctl.c\nindex 8be80096fbb6..82b736843c9d 100644\n--- a/net/sctp/sysctl.c\n+++ b/net/sctp/sysctl.c\n@@ -396,7 +396,7 @@ static int proc_sctp_do_hmac_alg(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_min);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n@@ -424,7 +424,7 @@ static int proc_sctp_do_rto_min(struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n",
      "error": "patching file net/sctp/sysctl.c\nHunk #1 succeeded at 424 with fuzz 1 (offset -9 lines).\nHunk #2 FAILED at 461.\n1 out of 2 hunks FAILED -- saving rejects to file net/sctp/sysctl.c.rej",
      "total_hunks": 2,
      "total_failed_hunks": 1,
      "failed_hunks": [
        2
      ],
      "file_conflicts": [
        {
          "file_name": "net/sctp/sysctl.c",
          "rej_file_content": "```diff\n--- net/sctp/sysctl.c\n+++ net/sctp/sysctl.c\n@@ -461,7 +461,7 @@ static int proc_sctp_do_rto_min(const struct ctl_table *ctl, int write,\n static int proc_sctp_do_rto_max(const struct ctl_table *ctl, int write,\n \t\t\t\tvoid *buffer, size_t *lenp, loff_t *ppos)\n {\n-\tstruct net *net = current->nsproxy->net_ns;\n+\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n \tunsigned int min = *(unsigned int *) ctl->extra1;\n \tunsigned int max = *(unsigned int *) ctl->extra2;\n \tstruct ctl_table tbl;\n```",
          "inline_merge_conflicts": [
            {
              "hunk_number": 2,
              "merge_conflict": "<<<<<<< DOWNSTREAM (version 246428bfb9e7db15c5cd08e1d0eca41b65af2b06)\n\tstruct net *net = container_of(ctl->data, struct net, sctp.auth_enable);\n=======\n\tstruct net *net = container_of(ctl->data, struct net, sctp.rto_max);\n\tunsigned int min = *(unsigned int *) ctl->extra1;\n\tunsigned int max = *(unsigned int *) ctl->extra2;\n>>>>>>> UPSTREAM PATCH (commit ea62dd1383913b5999f3d16ae99d411f41b528d4)"
            }
          ],
          "patch_apply_output": "patching file net/sctp/sysctl.c\nHunk #1 succeeded at 424 with fuzz 1 (offset -9 lines).\nHunk #2 FAILED at 461.\n1 out of 2 hunks FAILED -- saving rejects to file net/sctp/sysctl.c.rej"
        }
      ]
    }
  ]
}