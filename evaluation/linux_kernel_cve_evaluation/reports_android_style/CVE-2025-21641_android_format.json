{
  "cve_id": "CVE-2025-21641",
  "upstream_commit": "d38e26e36206ae3d544d496513212ae931d1da0a",
  "upstream_patch_content": "From 92cf7a51bdae24a32c592adcdd59a773ae149289 Mon Sep 17 00:00:00 2001\nFrom: \"Matthieu Baerts (NGI0)\" <matttbe@kernel.org>\nDate: Wed, 8 Jan 2025 16:34:31 +0100\nSubject: [PATCH] mptcp: sysctl: blackhole timeout: avoid using\n current->nsproxy\n\nAs mentioned in the previous commit, using the 'net' structure via\n'current' is not recommended for different reasons:\n\n- Inconsistency: getting info from the reader's/writer's netns vs only\n  from the opener's netns.\n\n- current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n  (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n  syzbot [1] using acct(2).\n\nThe 'pernet' structure can be obtained from the table->data using\ncontainer_of().\n\nFixes: 27069e7cb3d1 (\"mptcp: disable active MPTCP in case of blackhole\")\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nReviewed-by: Mat Martineau <martineau@kernel.org>\nSigned-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nLink: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-3-5df34b2083e8@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>\n---\n net/mptcp/ctrl.c | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/net/mptcp/ctrl.c b/net/mptcp/ctrl.c\nindex 81c30aa02196..b0dd008e2114 100644\n--- a/net/mptcp/ctrl.c\n+++ b/net/mptcp/ctrl.c\n@@ -160,7 +160,9 @@ static int proc_blackhole_detect_timeout(const struct ctl_table *table,\n \t\t\t\t\t int write, void *buffer, size_t *lenp,\n \t\t\t\t\t loff_t *ppos)\n {\n-\tstruct mptcp_pernet *pernet = mptcp_get_pernet(current->nsproxy->net_ns);\n+\tstruct mptcp_pernet *pernet = container_of(table->data,\n+\t\t\t\t\t\t   struct mptcp_pernet,\n+\t\t\t\t\t\t   blackhole_timeout);\n \tint ret;\n \n \tret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);\n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "6035702381c35a8f16757332381e58b348a9eaf9",
      "downstream_patch": "4c74fbdc5ab95b13945be01e6065940b68222db7",
      "commit_date": "2025-01-17 13:40:46 +0100",
      "result": "success",
      "downstream_patch_content": "commit 4c74fbdc5ab95b13945be01e6065940b68222db7\nAuthor: Matthieu Baerts (NGI0) <matttbe@kernel.org>\nDate:   Wed Jan 8 16:34:31 2025 +0100\n\n    mptcp: sysctl: blackhole timeout: avoid using current->nsproxy\n    \n    commit 92cf7a51bdae24a32c592adcdd59a773ae149289 upstream.\n    \n    As mentioned in the previous commit, using the 'net' structure via\n    'current' is not recommended for different reasons:\n    \n    - Inconsistency: getting info from the reader's/writer's netns vs only\n      from the opener's netns.\n    \n    - current->nsproxy can be NULL in some cases, resulting in an 'Oops'\n      (null-ptr-deref), e.g. when the current task is exiting, as spotted by\n      syzbot [1] using acct(2).\n    \n    The 'pernet' structure can be obtained from the table->data using\n    container_of().\n    \n    Fixes: 27069e7cb3d1 (\"mptcp: disable active MPTCP in case of blackhole\")\n    Cc: stable@vger.kernel.org\n    Link: https://lore.kernel.org/67769ecb.050a0220.3a8527.003f.GAE@google.com [1]\n    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>\n    Reviewed-by: Mat Martineau <martineau@kernel.org>\n    Signed-off-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>\n    Link: https://patch.msgid.link/20250108-net-sysctl-current-nsproxy-v1-3-5df34b2083e8@kernel.org\n    Signed-off-by: Jakub Kicinski <kuba@kernel.org>\n    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\n\ndiff --git a/net/mptcp/ctrl.c b/net/mptcp/ctrl.c\nindex 81c30aa02196..b0dd008e2114 100644\n--- a/net/mptcp/ctrl.c\n+++ b/net/mptcp/ctrl.c\n@@ -160,7 +160,9 @@ static int proc_blackhole_detect_timeout(const struct ctl_table *table,\n \t\t\t\t\t int write, void *buffer, size_t *lenp,\n \t\t\t\t\t loff_t *ppos)\n {\n-\tstruct mptcp_pernet *pernet = mptcp_get_pernet(current->nsproxy->net_ns);\n+\tstruct mptcp_pernet *pernet = container_of(table->data,\n+\t\t\t\t\t\t   struct mptcp_pernet,\n+\t\t\t\t\t\t   blackhole_timeout);\n \tint ret;\n \n \tret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);\n"
    }
  ],
  "failures": []
}