{
  "cve_id": "CVE-2025-21645",
  "upstream_commit": "7e16ae558a87ac9099b6a93a43f19b42d809fd78",
  "upstream_patch_content": "From dd410d784402c5775f66faf8b624e85e41c38aaf Mon Sep 17 00:00:00 2001\nFrom: \"Maciej S. Szmigiero\" <mail@maciej.szmigiero.name>\nDate: Mon, 6 Jan 2025 18:40:34 +0100\nSubject: [PATCH] platform/x86/amd/pmc: Only disable IRQ1 wakeup where i8042\n actually enabled it\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nWakeup for IRQ1 should be disabled only in cases where i8042 had\nactually enabled it, otherwise \"wake_depth\" for this IRQ will try to\ndrop below zero and there will be an unpleasant WARN() logged:\n\nkernel: atkbd serio0: Disabling IRQ1 wakeup source to avoid platform firmware bug\nkernel: ------------[ cut here ]------------\nkernel: Unbalanced IRQ 1 wake disable\nkernel: WARNING: CPU: 10 PID: 6431 at kernel/irq/manage.c:920 irq_set_irq_wake+0x147/0x1a0\n\nThe PMC driver uses DEFINE_SIMPLE_DEV_PM_OPS() to define its dev_pm_ops\nwhich sets amd_pmc_suspend_handler() to the .suspend, .freeze, and\n.poweroff handlers. i8042_pm_suspend(), however, is only set as\nthe .suspend handler.\n\nFix the issue by call PMC suspend handler only from the same set of\ndev_pm_ops handlers as i8042_pm_suspend(), which currently means just\nthe .suspend handler.\n\nTo reproduce this issue try hibernating (S4) the machine after a fresh boot\nwithout putting it into s2idle first.\n\nFixes: 8e60615e8932 (\"platform/x86/amd: pmc: Disable IRQ1 wakeup for RN/CZN\")\nReviewed-by: Mario Limonciello <mario.limonciello@amd.com>\nSigned-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>\nLink: https://lore.kernel.org/r/c8f28c002ca3c66fbeeb850904a1f43118e17200.1736184606.git.mail@maciej.szmigiero.name\n[ij: edited the commit message.]\nReviewed-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\n---\n drivers/platform/x86/amd/pmc/pmc.c | 8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ndiff --git a/drivers/platform/x86/amd/pmc/pmc.c b/drivers/platform/x86/amd/pmc/pmc.c\nindex 26b878ee5191..a254debb9256 100644\n--- a/drivers/platform/x86/amd/pmc/pmc.c\n+++ b/drivers/platform/x86/amd/pmc/pmc.c\n@@ -947,6 +947,10 @@ static int amd_pmc_suspend_handler(struct device *dev)\n {\n \tstruct amd_pmc_dev *pdev = dev_get_drvdata(dev);\n \n+\t/*\n+\t * Must be called only from the same set of dev_pm_ops handlers\n+\t * as i8042_pm_suspend() is called: currently just from .suspend.\n+\t */\n \tif (pdev->disable_8042_wakeup && !disable_workarounds) {\n \t\tint rc = amd_pmc_wa_irq1(pdev);\n \n@@ -959,7 +963,9 @@ static int amd_pmc_suspend_handler(struct device *dev)\n \treturn 0;\n }\n \n-static DEFINE_SIMPLE_DEV_PM_OPS(amd_pmc_pm, amd_pmc_suspend_handler, NULL);\n+static const struct dev_pm_ops amd_pmc_pm = {\n+\t.suspend = amd_pmc_suspend_handler,\n+};\n \n static const struct pci_device_id pmc_pci_ids[] = {\n \t{ PCI_DEVICE(PCI_VENDOR_ID_AMD, AMD_CPU_ID_PS) },\n-- \n2.39.5 (Apple Git-154)\n\n",
  "successes": [
    {
      "downstream_version": "7673030efe0f8ca1056d3849d61784c6caa052af",
      "downstream_patch": "5cc621085e2b7a9b1905a98f8e5a86bb4aea2016",
      "commit_date": "2025-01-17 13:36:16 +0100",
      "result": "success",
      "downstream_patch_content": "commit 5cc621085e2b7a9b1905a98f8e5a86bb4aea2016\nAuthor: Maciej S. Szmigiero <mail@maciej.szmigiero.name>\nDate:   Mon Jan 6 18:40:34 2025 +0100\n\n    platform/x86/amd/pmc: Only disable IRQ1 wakeup where i8042 actually enabled it\n    \n    [ Upstream commit dd410d784402c5775f66faf8b624e85e41c38aaf ]\n    \n    Wakeup for IRQ1 should be disabled only in cases where i8042 had\n    actually enabled it, otherwise \"wake_depth\" for this IRQ will try to\n    drop below zero and there will be an unpleasant WARN() logged:\n    \n    kernel: atkbd serio0: Disabling IRQ1 wakeup source to avoid platform firmware bug\n    kernel: ------------[ cut here ]------------\n    kernel: Unbalanced IRQ 1 wake disable\n    kernel: WARNING: CPU: 10 PID: 6431 at kernel/irq/manage.c:920 irq_set_irq_wake+0x147/0x1a0\n    \n    The PMC driver uses DEFINE_SIMPLE_DEV_PM_OPS() to define its dev_pm_ops\n    which sets amd_pmc_suspend_handler() to the .suspend, .freeze, and\n    .poweroff handlers. i8042_pm_suspend(), however, is only set as\n    the .suspend handler.\n    \n    Fix the issue by call PMC suspend handler only from the same set of\n    dev_pm_ops handlers as i8042_pm_suspend(), which currently means just\n    the .suspend handler.\n    \n    To reproduce this issue try hibernating (S4) the machine after a fresh boot\n    without putting it into s2idle first.\n    \n    Fixes: 8e60615e8932 (\"platform/x86/amd: pmc: Disable IRQ1 wakeup for RN/CZN\")\n    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>\n    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>\n    Link: https://lore.kernel.org/r/c8f28c002ca3c66fbeeb850904a1f43118e17200.1736184606.git.mail@maciej.szmigiero.name\n    [ij: edited the commit message.]\n    Reviewed-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\n    Signed-off-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\n    Signed-off-by: Sasha Levin <sashal@kernel.org>\n\ndiff --git a/drivers/platform/x86/amd/pmc/pmc.c b/drivers/platform/x86/amd/pmc/pmc.c\nindex f49b1bb258c7..70907e8f3ea9 100644\n--- a/drivers/platform/x86/amd/pmc/pmc.c\n+++ b/drivers/platform/x86/amd/pmc/pmc.c\n@@ -878,6 +878,10 @@ static int amd_pmc_suspend_handler(struct device *dev)\n {\n \tstruct amd_pmc_dev *pdev = dev_get_drvdata(dev);\n \n+\t/*\n+\t * Must be called only from the same set of dev_pm_ops handlers\n+\t * as i8042_pm_suspend() is called: currently just from .suspend.\n+\t */\n \tif (pdev->disable_8042_wakeup && !disable_workarounds) {\n \t\tint rc = amd_pmc_wa_irq1(pdev);\n \n@@ -890,7 +894,9 @@ static int amd_pmc_suspend_handler(struct device *dev)\n \treturn 0;\n }\n \n-static DEFINE_SIMPLE_DEV_PM_OPS(amd_pmc_pm, amd_pmc_suspend_handler, NULL);\n+static const struct dev_pm_ops amd_pmc_pm = {\n+\t.suspend = amd_pmc_suspend_handler,\n+};\n \n static const struct pci_device_id pmc_pci_ids[] = {\n \t{ PCI_DEVICE(PCI_VENDOR_ID_AMD, AMD_CPU_ID_PS) },\n"
    },
    {
      "downstream_version": "7922b1f058fe24a93730511dd0ae2e1630920096",
      "downstream_patch": "b25778c87a6bce40c31e92364f08aa6240309e25",
      "commit_date": "2025-01-17 13:40:43 +0100",
      "result": "success",
      "downstream_patch_content": "commit b25778c87a6bce40c31e92364f08aa6240309e25\nAuthor: Maciej S. Szmigiero <mail@maciej.szmigiero.name>\nDate:   Mon Jan 6 18:40:34 2025 +0100\n\n    platform/x86/amd/pmc: Only disable IRQ1 wakeup where i8042 actually enabled it\n    \n    [ Upstream commit dd410d784402c5775f66faf8b624e85e41c38aaf ]\n    \n    Wakeup for IRQ1 should be disabled only in cases where i8042 had\n    actually enabled it, otherwise \"wake_depth\" for this IRQ will try to\n    drop below zero and there will be an unpleasant WARN() logged:\n    \n    kernel: atkbd serio0: Disabling IRQ1 wakeup source to avoid platform firmware bug\n    kernel: ------------[ cut here ]------------\n    kernel: Unbalanced IRQ 1 wake disable\n    kernel: WARNING: CPU: 10 PID: 6431 at kernel/irq/manage.c:920 irq_set_irq_wake+0x147/0x1a0\n    \n    The PMC driver uses DEFINE_SIMPLE_DEV_PM_OPS() to define its dev_pm_ops\n    which sets amd_pmc_suspend_handler() to the .suspend, .freeze, and\n    .poweroff handlers. i8042_pm_suspend(), however, is only set as\n    the .suspend handler.\n    \n    Fix the issue by call PMC suspend handler only from the same set of\n    dev_pm_ops handlers as i8042_pm_suspend(), which currently means just\n    the .suspend handler.\n    \n    To reproduce this issue try hibernating (S4) the machine after a fresh boot\n    without putting it into s2idle first.\n    \n    Fixes: 8e60615e8932 (\"platform/x86/amd: pmc: Disable IRQ1 wakeup for RN/CZN\")\n    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>\n    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>\n    Link: https://lore.kernel.org/r/c8f28c002ca3c66fbeeb850904a1f43118e17200.1736184606.git.mail@maciej.szmigiero.name\n    [ij: edited the commit message.]\n    Reviewed-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\n    Signed-off-by: Ilpo J\u00e4rvinen <ilpo.jarvinen@linux.intel.com>\n    Signed-off-by: Sasha Levin <sashal@kernel.org>\n\ndiff --git a/drivers/platform/x86/amd/pmc/pmc.c b/drivers/platform/x86/amd/pmc/pmc.c\nindex 5669f94c3d06..4d3acfe849bf 100644\n--- a/drivers/platform/x86/amd/pmc/pmc.c\n+++ b/drivers/platform/x86/amd/pmc/pmc.c\n@@ -947,6 +947,10 @@ static int amd_pmc_suspend_handler(struct device *dev)\n {\n \tstruct amd_pmc_dev *pdev = dev_get_drvdata(dev);\n \n+\t/*\n+\t * Must be called only from the same set of dev_pm_ops handlers\n+\t * as i8042_pm_suspend() is called: currently just from .suspend.\n+\t */\n \tif (pdev->disable_8042_wakeup && !disable_workarounds) {\n \t\tint rc = amd_pmc_wa_irq1(pdev);\n \n@@ -959,7 +963,9 @@ static int amd_pmc_suspend_handler(struct device *dev)\n \treturn 0;\n }\n \n-static DEFINE_SIMPLE_DEV_PM_OPS(amd_pmc_pm, amd_pmc_suspend_handler, NULL);\n+static const struct dev_pm_ops amd_pmc_pm = {\n+\t.suspend = amd_pmc_suspend_handler,\n+};\n \n static const struct pci_device_id pmc_pci_ids[] = {\n \t{ PCI_DEVICE(PCI_VENDOR_ID_AMD, AMD_CPU_ID_PS) },\n"
    }
  ],
  "failures": []
}